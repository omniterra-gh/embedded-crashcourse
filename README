# Arduino I2C Address Scanner

This project provides an Arduino sketch to scan for I2C devices connected to your Arduino board. It's a useful tool for identifying the addresses of I2C devices in your setup.

## Table of Contents
1. [Hardware Requirements](#hardware-requirements)
2. [Wiring Diagram](#wiring-diagram)
3. [Software Requirements](#software-requirements)
4. [Installation](#installation)
5. [Usage](#usage)
6. [Example Output](#example-output)
7. [Troubleshooting](#troubleshooting)

## Hardware Requirements
- Arduino board (e.g., Arduino Uno, Nano, Mega)
- I2C device(s) to scan
- Jumper wires

## Wiring Diagram

```
     Arduino                I2C Device
     -------                ----------
     5V     --------------- VCC
     GND    --------------- GND
     SDA    --------------- SDA
     SCL    --------------- SCL
```

Note: On most Arduino boards, the SDA (data line) and SCL (clock line) are:
- For Arduino Uno, Nano, Pro Mini: A4 (SDA), A5 (SCL)
- For Arduino Mega: 20 (SDA), 21 (SCL)
- For Arduino Leonardo: 2 (SDA), 3 (SCL)

## Software Requirements
- Arduino IDE (version 1.8.x or later)
- Wire library (included with Arduino IDE)

## Installation
1. Open the Arduino IDE
2. Create a new sketch
3. Copy and paste the following code into the sketch:

```cpp
#include <Wire.h>

void setup() {
  Wire.begin();
  Serial.begin(9600);
  while (!Serial);
  Serial.println("\nI2C Scanner");
}

void loop() {
  byte error, address;
  int nDevices;

  Serial.println("Scanning...");

  nDevices = 0;
  for(address = 1; address < 127; address++ ) {
    Wire.beginTransmission(address);
    error = Wire.endTransmission();

    if (error == 0) {
      Serial.print("I2C device found at address 0x");
      if (address < 16) 
        Serial.print("0");
      Serial.print(address,HEX);
      Serial.println("  !");

      nDevices++;
    }
    else if (error == 4) {
      Serial.print("Unknown error at address 0x");
      if (address < 16) 
        Serial.print("0");
      Serial.println(address,HEX);
    }    
  }
  if (nDevices == 0)
    Serial.println("No I2C devices found\n");
  else
    Serial.println("done\n");

  delay(5000);  // Wait 5 seconds for next scan
}
```

4. Save the sketch (e.g., "I2C_Scanner.ino")

## Usage
1. Connect your I2C device(s) to the Arduino according to the wiring diagram
2. Connect your Arduino to your computer via USB
3. Upload the sketch to your Arduino board
4. Open the Serial Monitor (Tools > Serial Monitor)
5. Set the baud rate to 9600
6. The scanner will start automatically and scan for I2C devices every 5 seconds

## Example Output
```
I2C Scanner

Scanning...
I2C device found at address 0x3C  !
I2C device found at address 0x68  !
done

Scanning...
I2C device found at address 0x3C  !
I2C device found at address 0x68  !
done
```
# AHT20 Temperature and Humidity Sensor Project

## Overview

This project uses the AHT20 sensor to measure temperature and humidity. It's designed to run on Arduino-compatible boards using the PlatformIO development environment. The AHT20 is a high-precision, fully calibrated sensor for measuring relative humidity and temperature, communicating over the I2C interface.

## Features

- Initializes and reads data from the AHT20 sensor
- Displays temperature in Celsius and relative humidity percentage
- Provides error handling for failed readings
- Compatible with PlatformIO and Arduino frameworks

## Hardware Requirements

- Any Arduino-compatible board (e.g., Arduino Uno, ESP32, etc.)
- AHT20 Temperature and Humidity Sensor
- Connecting wires

## Wiring

Connect the AHT20 sensor to your board as follows:

- VCC to 3.3V
- GND to GND
- SCL to the SCL pin of your board (A5 on most Arduino boards)
- SDA to the SDA pin of your board (A4 on most Arduino boards)

## Software Setup

1. Install PlatformIO Core or PlatformIO IDE extension for Visual Studio Code.
2. Create a new project in PlatformIO for your specific board.
3. Replace the contents of `src/main.cpp` with the provided code.
4. Ensure your `platformio.ini` file includes the following (adjust for your specific board):

```ini
[env:your_board]
platform = atmelavr
board = uno
framework = arduino
monitor_speed = 9600
```

## Usage

1. Connect your board to your computer.
2. Build and upload the project using PlatformIO.
3. Open the Serial Monitor (baud rate 9600) to view the temperature and humidity readings.

## Output

The program will output temperature and humidity readings every 2 seconds in the following format:

```
Temperature: XX.XX Â°C, Humidity: YY.YY %
```

If there's an error reading the sensor, you'll see:

```
Failed to read from AHT20 sensor!
```

## Troubleshooting

- Ensure all connections are secure and correct.
- Verify that you're using a 3.3V power supply for the AHT20 sensor.
- Check that the I2C address in the code matches your sensor (0x38 is standard).

## Contributing

Feel free to fork this project and submit pull requests with improvements or bug fixes.

## License

This project is open source and available under the [MIT License](https://opensource.org/licenses/MIT).

## Acknowledgments

- Thanks to the Arduino and PlatformIO communities for their invaluable resources and support.

In this example, two I2C devices were found at addresses 0x3C and 0x68.

## Troubleshooting
- If no devices are found, double-check your wiring connections
- Ensure that your I2C devices are powered correctly
- Some I2C devices may require pull-up resistors on the SDA and SCL lines
- If you're using an Arduino board with different SDA and SCL pins, modify the `Wire.begin()` call in the setup() function accordingly

For more information on I2C communication with Arduino, refer to the [official Arduino Wire Library documentation](https://www.arduino.cc/en/reference/wire).